name: ci

on:
  push:
    branches:
      - main
  pull_request:

env:
  NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
  NX_CLOUD_DISTRIBUTED_EXECUTION: true

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  main:
    name: Nx Cloud - Main Job
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout [main]
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: '16'
      - name: Use the node_modules cache if available [npm]
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-16-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-16-
      - run: npm ci
      - run: npx nx-cloud start-ci-run
        npx nx workspace-lint
        npx nx run-many --target=lint --projects=api,upd,db-updater,db-cli --parallel --maxParallel=3
        npx nx run-many --target=build --projects=api,upd,db-updater,db-cli --parallel --maxParallel=3
      - run: npx nx-cloud stop-all-agents
  pr:
    name: Nx Cloud - Main Job
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout [main]
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: '16'
      - name: Use the node_modules cache if available [npm]
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-16-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-16-
      - run: npm ci
      - run: npx nx-cloud start-ci-run
      - run: npx nx workspace-lint
      - run: npx nx run-many --target=lint --projects=api,upd,db-updater,db-cli --parallel --maxParallel=3
      - run: npx nx run-many --target=build --projects=api,upd,db-updater,db-cli --parallel --maxParallel=3
      - run: npx nx-cloud stop-all-agents
  agents:
    runs-on: ubuntu-latest
    name: Agent 1
    timeout-minutes: 60
    strategy:
      matrix:
        agent: [ 1, 2, 3 ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16'
      - name: Use the node_modules cache if available [npm]
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-16-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-16-
      - run: npm ci
      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent
